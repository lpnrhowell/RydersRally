{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/TicketItem/index.js","utils/queries.js","assets/spinner.gif","components/TicketList/index.js","components/ClubMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Register.js","components/Nav/index.js","pages/CreateEvent.js","utils/hooks.js","pages/Success.js","pages/OrderHistory.js","App.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_TICKETS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CURRENT_CLUB","reducer","state","action","type","tickets","events","cartOpen","cart","ticket","map","purchaseQuantity","newState","filter","length","clubs","currentClub","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","TicketItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_EVENTS","gql","QUERY_CHECKOUT","QUERY_TICKETS","QUERY_USER","TicketList","useQuery","loading","data","useEffect","forEach","then","club","spinner","ClubMenu","ticketData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","products","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","CREATE_EVENT","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Register","addUser","firstName","lastName","Nav","href","logout","CreateEvent","errors","setErrors","callback","values","setValues","useForm","Form","noValidate","Input","label","venue","city_state","ticket_price","img","Button","primary","Object","keys","update","proxy","readQuery","query","getEvents","createEvent","writeQuery","onError","graphQLErrors","extensions","exception","addEvent","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","Container","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c7b8aa8.chunk.js","sourcesContent":["export function pluralize(name, count) {\n\tif (count === 1) {\n\t\treturn name;\n\t}\n\treturn name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = window.indexedDB.open('ryders-rally', 1);\n\t\tlet db, tx, store;\n\t\trequest.onupgradeneeded = function (e) {\n\t\t\tconst db = request.result;\n\t\t\tdb.createObjectStore('tickets', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('clubs', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('cart', { keyPath: '_id' });\n\t\t};\n\n\t\trequest.onerror = function (e) {\n\t\t\tconsole.log('There was an error');\n\t\t};\n\n\t\trequest.onsuccess = function (e) {\n\t\t\tdb = request.result;\n\t\t\ttx = db.transaction(storeName, 'readwrite');\n\t\t\tstore = tx.objectStore(storeName);\n\n\t\t\tdb.onerror = function (e) {\n\t\t\t\tconsole.log('error', e);\n\t\t\t};\n\n\t\t\tswitch (method) {\n\t\t\t\tcase 'put':\n\t\t\t\t\tstore.put(object);\n\t\t\t\t\tresolve(object);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'get':\n\t\t\t\t\tconst all = store.getAll();\n\t\t\t\t\tall.onsuccess = function () {\n\t\t\t\t\t\tresolve(all.result);\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\t\tstore.delete(object._id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('No valid method');\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttx.oncomplete = function () {\n\t\t\t\tdb.close();\n\t\t\t};\n\t\t};\n\t});\n}\n","export const UPDATE_TICKETS = 'UPDATE_TICKETS';\nexport const UPDATE_EVENTS = 'UPDATE_EVENTS';\nexport const UPDATE_CLUBS = 'UPDATE_CLUBS';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const TOGGLE_CART = 'TOGGLE_CART';\nexport const UPDATE_CURRENT_CLUB = 'UPDATE_CURRENT_CLUB';\n","import { useReducer } from 'react';\nimport {\n\tUPDATE_EVENTS,\n\tADD_TO_CART,\n\tUPDATE_CART_QUANTITY,\n\tREMOVE_FROM_CART,\n\tADD_MULTIPLE_TO_CART,\n\tUPDATE_TICKETS,\n\tUPDATE_CLUBS,\n\tUPDATE_CURRENT_CLUB,\n\tCLEAR_CART,\n\tTOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\t// Returns a copy of state with an update tickets array. We use the action.tickets property and spread it's contents into the new array.\n\t\tcase UPDATE_TICKETS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttickets: [...action.tickets],\n\t\t\t};\n\t\tcase UPDATE_EVENTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tevents: [...action.events],\n\t\t\t};\n\n\t\tcase ADD_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: [...state.cart, action.ticket],\n\t\t\t};\n\t\tcase ADD_MULTIPLE_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: [...state.cart, ...action.tickets],\n\t\t\t};\n\t\t// Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n\t\t// If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n\t\tcase UPDATE_CART_QUANTITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: state.cart.map((ticket) => {\n\t\t\t\t\tif (action._id === ticket._id) {\n\t\t\t\t\t\tticket.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t}\n\t\t\t\t\treturn ticket;\n\t\t\t\t}),\n\t\t\t};\n\n\t\t// First we iterate through each item in the cart and check to see if the `ticket._id` matches the `action._id`\n\t\t// If so, we remove it from our cart and set the updated state to a variable called `newState`\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet newState = state.cart.filter((ticket) => {\n\t\t\t\treturn ticket._id !== action._id;\n\t\t\t});\n\n\t\t\t// Then we return a copy of state and check to see if the cart is empty.\n\t\t\t// If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: newState.length > 0,\n\t\t\t\tcart: newState,\n\t\t\t};\n\n\t\tcase CLEAR_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: false,\n\t\t\t\tcart: [],\n\t\t\t};\n\n\t\tcase TOGGLE_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: !state.cartOpen,\n\t\t\t};\n\n\t\tcase UPDATE_CLUBS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclubs: [...action.clubs],\n\t\t\t};\n\n\t\tcase UPDATE_CURRENT_CLUB:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentClub: action.currentClub,\n\t\t\t};\n\n\t\t// Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n\t\t// This saves us from a crash.\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function useTicketReducer(initialState) {\n\treturn useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from 'react';\nimport { useTicketReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n\tconst [state, dispatch] = useTicketReducer({\n\t\ttickets: [],\n\t\tcart: [],\n\t\tcartOpen: false,\n\t\tclubs: [],\n\t\tcurrentClub: '',\n\t});\n\n\treturn <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n\treturn useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction TicketItem(item) {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { image, name, _id, price, quantity } = item;\n\n\tconst { cart } = state;\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: _id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tticket: { ...item, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='card px-1 py-1'>\n\t\t\t<Link to={`/tickets/${_id}`}>\n\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t<p>{name}</p>\n\t\t\t</Link>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{quantity} {pluralize('item', quantity)} in stock\n\t\t\t\t</div>\n\t\t\t\t<span>${price}</span>\n\t\t\t</div>\n\t\t\t<button onClick={addToCart}>Add to cart</button>\n\t\t</div>\n\t);\n}\n\nexport default TicketItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_EVENTS = gql`\n\tquery getCheckout($products: [ID]!) {\n\t\tcheckout(products: $products) {\n\t\t\tsession\n\t\t}\n\t}\n`;\nexport const QUERY_CHECKOUT = gql`\n\tquery getCheckout($products: [ID]!) {\n\t\tcheckout(products: $products) {\n\t\t\tsession\n\t\t}\n\t}\n`;\n\nexport const QUERY_TICKETS = gql`\n\t{\n\t\ttickets {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\timage\n\t\t\tclub {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CLUBS = gql`\n\t{\n\t\tclubs {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\nexport const QUERY_USER = gql`\n\t{\n\t\tuser {\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\torders {\n\t\t\t\t_id\n\t\t\t\tpurchaseDate\n\t\t\t\ttickets {\n\t\t\t\t\t_id\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tquantity\n\t\t\t\t\tclub\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport TicketItem from '../TicketItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_TICKETS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_TICKETS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction TicketList() {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { currentClub } = state;\n\n\tconst { loading, data } = useQuery(QUERY_TICKETS);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_TICKETS,\n\t\t\t\ttickets: data.tickets,\n\t\t\t});\n\t\t\tdata.tickets.forEach((ticket) => {\n\t\t\t\tidbPromise('tickets', 'put', ticket);\n\t\t\t});\n\t\t} else if (!loading) {\n\t\t\tidbPromise('tickets', 'get').then((tickets) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_TICKETS,\n\t\t\t\t\ttickets: tickets,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [data, loading, dispatch]);\n\n\tfunction filtertickets() {\n\t\tif (!currentClub) {\n\t\t\treturn state.tickets;\n\t\t}\n\n\t\treturn state.tickets.filter((ticket) => ticket.club._id === currentClub);\n\t}\n\n\treturn (\n\t\t<div className='my-2'>\n\t\t\t<h2>Our tickets:</h2>\n\t\t\t{state.tickets.length ? (\n\t\t\t\t<div className='flex-row'>\n\t\t\t\t\t{filtertickets().map((ticket) => (\n\t\t\t\t\t\t<TicketItem\n\t\t\t\t\t\t\tkey={ticket._id}\n\t\t\t\t\t\t\t_id={ticket._id}\n\t\t\t\t\t\t\timage={ticket.image}\n\t\t\t\t\t\t\tname={ticket.name}\n\t\t\t\t\t\t\tprice={ticket.price}\n\t\t\t\t\t\t\tquantity={ticket.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any tickets yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt='loading' /> : null}\n\t\t</div>\n\t);\n}\n\nexport default TicketList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_TICKETS, UPDATE_CURRENT_CLUB } from '../../utils/actions';\nimport { QUERY_TICKETS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ClubMenu() {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { tickets } = state;\n\n\tconst { loading, data: ticketData } = useQuery(QUERY_TICKETS);\n\n\tuseEffect(() => {\n\t\tif (ticketData) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_TICKETS,\n\t\t\t\ttickets: ticketData.tickets,\n\t\t\t});\n\t\t\tticketData.tickets.forEach((ticket) => {\n\t\t\t\tidbPromise('tickets', 'put', ticket);\n\t\t\t});\n\t\t} else if (!loading) {\n\t\t\tidbPromise('tickets', 'get').then((tickets) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_TICKETS,\n\t\t\t\t\ttickets: tickets,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [ticketData, loading, dispatch]);\n\n\tconst handleClick = (id) => {\n\t\tdispatch({\n\t\t\ttype: UPDATE_CURRENT_CLUB,\n\t\t\tcurrentClub: id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Choose a ticket:</h2>\n\t\t\t{tickets.map((item) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={item._id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleClick(item._id);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{item.name}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default ClubMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n\tgetProfile() {\n\t\treturn decode(this.getToken());\n\t}\n\n\tloggedIn() {\n\t\t// Checks if there is a saved token and it's still valid\n\t\tconst token = this.getToken();\n\t\treturn !!token && !this.isTokenExpired(token);\n\t}\n\n\tisTokenExpired(token) {\n\t\ttry {\n\t\t\tconst decoded = decode(token);\n\t\t\tif (decoded.exp < Date.now() / 1000) {\n\t\t\t\treturn true;\n\t\t\t} else return false;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetToken() {\n\t\t// Retrieves the user token from localStorage\n\t\treturn localStorage.getItem('id_token');\n\t}\n\n\tlogin(idToken) {\n\t\t// Saves user token to localStorage\n\t\tlocalStorage.setItem('id_token', idToken);\n\n\t\twindow.location.assign('/');\n\t}\n\n\tlogout() {\n\t\t// Clear user token and profile data from localStorage\n\t\tlocalStorage.removeItem('id_token');\n\t\t// this will reload the page and reset the state of the application\n\t\twindow.location.assign('/');\n\t}\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport TicketList from '../components/TicketList';\nimport ClubMenu from '../components/ClubMenu';\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n\treturn (\n\t\t<div className='container'>\n\t\t\t<ClubMenu />\n\t\t\t<TicketList />\n\t\t\t<Cart />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n\tmutation login($email: String!, $password: String!) {\n\t\tlogin(email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_ORDER = gql`\n\tmutation addOrder($products: [ID]!) {\n\t\taddOrder(products: $products) {\n\t\t\tpurchaseDate\n\t\t\tproducts {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tcategory {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_USER = gql`\n\tmutation addUser($userName: String!, $email: String!, $password: String!) {\n\t\taddUser(userName: $userName, email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const CREATE_EVENT = gql`\n\tmutation createEvent(\n\t\t$name: String!\n\t\t$venue: String!\n\t\t$city_state: String!\n\t\t$ticket_price: String!\n\t\t$img: String\n\t) {\n\t\tcreateEvent(\n\t\t\teventInput: {\n\t\t\t\tname: $name\n\t\t\t\tvenue: $venue\n\t\t\t\tcity_state: $city_state\n\t\t\t\tticket_price: $ticket_price\n\t\t\t\timg: $img\n\t\t\t}\n\t\t) {\n\t\t\tname\n\t\t\tvenue\n\t\t\tcity_state\n\t\t\tticket_price\n\t\t\timg\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n\tconst [formState, setFormState] = useState({ email: '', password: '' });\n\tconst [login, { error }] = useMutation(LOGIN);\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst mutationResponse = await login({\n\t\t\t\tvariables: { email: formState.email, password: formState.password },\n\t\t\t});\n\t\t\tconst token = mutationResponse.data.login.token;\n\t\t\tAuth.login(token);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='container my-1'>\n\t\t\t<Link to='/signup'>← Go to Signup</Link>\n\n\t\t\t<h2>Login</h2>\n\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t<label htmlFor='email'>Email address:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder='youremail@test.com'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex-row space-between my-2'>\n\t\t\t\t\t<label htmlFor='pwd'>Password:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder='******'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tid='pwd'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{error ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className='error-text'>The provided credentials are incorrect</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<div className='flex-row flex-end'>\n\t\t\t\t\t<button type='submit'>Submit</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Register(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Register</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { QUERY_EVENTS } from '../utils/queries';\nimport { CREATE_EVENT } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { useForm } from '../utils/hooks';\n\nconst CreateEvent = (props) => {\n\tconst context = useContext(Auth);\n\tconst [errors, setErrors] = useState({});\n\n\tconst { onChange, onSubmit, values } = useForm(createEvent, {\n\t\tname: '',\n\t\tvenue: '',\n\t\tcity_state: '',\n\t\tticket_price: '',\n\t\timg: '',\n\t});\n\n\tconst [addEvent, { error }] = useMutation(CREATE_EVENT, {\n\t\tvariables: values,\n\t\tupdate(proxy, result) {\n\t\t\tconst data = proxy.readQuery({\n\t\t\t\tquery: QUERY_EVENTS,\n\t\t\t});\n\t\t\tdata.getEvents = [result.data.createEvent, ...data.getEvents];\n\t\t\tproxy.writeQuery({ query: QUERY_EVENTS, data });\n\t\t\tvalues.img = '';\n\t\t\tvalues.name = '';\n\t\t\tvalues.ticket_price = '';\n\t\t\tvalues.city_state = '';\n\t\t\tvalues.venue = '';\n\t\t},\n\n\t\tonError(err) {\n\t\t\tsetErrors(err.graphQLErrors[0].extensions.exception.errors);\n\t\t},\n\t});\n\n\tfunction createEvent() {\n\t\treturn (\n\t\t\t<div className='form-container'>\n\t\t\t\t<Form onSubmit={onSubmit} noValidate>\n\t\t\t\t\t<h1>Create Event</h1>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\tplaceholder='Name of event..'\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\terror={errors.name ? true : false}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\tplaceholder='Venue..'\n\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\terror={errors.venue ? true : false}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel='City-State'\n\t\t\t\t\t\tplaceholder='City and State..'\n\t\t\t\t\t\tname='city_state'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={values.city_state}\n\t\t\t\t\t\terror={errors.city_state ? true : false}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel='Ticket Price'\n\t\t\t\t\t\tplaceholder='Ticket Price..'\n\t\t\t\t\t\tname='ticket_price'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={values.ticket_price}\n\t\t\t\t\t\terror={errors.ticket_price ? true : false}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel='Img'\n\t\t\t\t\t\tplaceholder='Img..'\n\t\t\t\t\t\tname='img'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={values.img}\n\t\t\t\t\t\terror={errors.img ? true : false}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button type='submit' primary>\n\t\t\t\t\t\tCreate Event\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t\t{Object.keys(errors).length > 0 && (\n\t\t\t\t\t<div className='ui error message'>\n\t\t\t\t\t\t<ul className='list'>\n\t\t\t\t\t\t\t{Object.values(errors).map((value) => (\n\t\t\t\t\t\t\t\t<li key={value}>{value}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\taddEvent();\n};\n\nexport default CreateEvent;\n","import { useState } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloProvider,\n\tcreateHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\n//import Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Nav from './components/Nav';\nimport CreateEvent from './pages/CreateEvent';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport { Container } from 'semantic-ui-react';\n\nconst httpLink = createHttpLink({\n\turi: 'https://rydersrally.herokuapp.com/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('jwtToken');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<StoreProvider>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t\t\t<Route exact path='/register' component={Register} />\n\t\t\t\t\t\t\t<Route exact path='/success' component={Success} />\n\t\t\t\t\t\t\t<Route exact path='/orderHistory' component={OrderHistory} />\n\t\t\t\t\t\t\t<Route exact path='/createEvent' component={CreateEvent} />\n\t\t\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t</StoreProvider>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}