{"version":3,"sources":["serviceWorker.js","context/auth.js","helper/auth.js","components/Nav.jsx","components/Sharing.jsx","helper/graphql.js","components/Events.jsx","components/Home.jsx","helper/hooks.js","components/Login.jsx","components/Register.jsx","components/CreateEvent.jsx","App.js","ApolloConfg.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","AuthRoute","Component","component","rest","useContext","render","to","Nav","pathname","path","substr","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","pointing","secondary","size","color","Item","username","active","as","Link","id","position","onClick","SharingBar","className","href","class","FETCH_EVENTS_QUERY","gql","Events","useQuery","loading","data","console","log","Grid","Row","style","marginTop","Transition","Group","getEvents","map","event","Column","Image","src","img","width","height","venue","city_state","ticket_price","Home","columns","useForm","callback","values","setValues","onChange","target","onSubmit","preventDefault","LOGIN_USER","Login","context","errors","setErrors","loginUser","password","useMutation","update","_","history","push","onError","err","graphQLErrors","extensions","exception","variables","Form","noValidate","Input","label","placeholder","error","Button","primary","Object","keys","length","REGISTER_USER","Register","addUser","email","confirmPassword","register","CREATE_EVENT","CreateEvent","addEvent","proxy","result","readQuery","query","createEvent","writeQuery","App","Container","exact","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74fff204.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default AuthRoute;","import React, { useContext, useState } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport \"../styles/_nav.scss\"\n\nimport { AuthContext } from '../context/auth';\n\nfunction Nav() {\n  const { user, logout } = useContext(AuthContext);\n  const pathname = window.location.pathname;\n\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\n  const [activeItem, setActiveItem] = useState(path);\n\n  const handleItemClick = (e, { name }) => setActiveItem(name);\n\n  const nav = user ? (\n    <Menu pointing secondary size=\"massive\" color=\"teal\">\n      <Menu.Item name={user.username} active as={Link} to=\"/\" />\n\n      <Menu.Menu id=\"navLink\" position=\"right\">\n        <Menu.Item name=\"Create Event\" id=\"item\" as={Link} to=\"/createEvent\" onClick={handleItemClick}/>\n        <Menu.Item name=\"logout\" id=\"item\" onClick={logout} />\n      </Menu.Menu>\n    </Menu>\n  ) : (\n      <Menu pointing secondary size=\"massive\" color=\"teal\">\n        <Menu.Item\n          id=\"item\"\n          name=\"home\"\n          active={activeItem === 'home'}\n          onClick={handleItemClick}\n          as={Link}\n          to=\"/\"\n        />\n\n        <Menu.Menu color=\"teal\" id=\"navLink\" position=\"right\">\n          <Menu.Item\n            id=\"item\"\n            name=\"login\"\n            active={activeItem === 'login'}\n            onClick={handleItemClick}\n            as={Link}\n            to=\"/login\"\n\n\n          />\n          <Menu.Item\n            id=\"item\"\n            name=\"register\"\n            active={activeItem === 'register'}\n            onClick={handleItemClick}\n            as={Link}\n            to=\"/register\"\n          />\n        </Menu.Menu>\n      </Menu>\n    );\n\n  return nav;\n}\n\nexport default Nav;","import React from \"react\";\nimport \"../styles/_sharing.scss\";\n\n\nexport default function SharingBar() {\n    return (\n        <footer>\n            <div className=\"share-btn-container\" id=\"share\">\n                <a href=\"#\" class=\"facebook-btn\">\n                    <i class=\"fab fa-facebook\"></i>\n                </a>\n\n                <a href=\"#\" class=\"twitter-btn\">\n                    <i class=\"fab fa-twitter\"></i>\n                </a>\n\n                <a href=\"#\" class=\"instagram-btn\">\n                    <i class=\"fab fa-instagram\"></i>\n                </a>\n            </div>\n        </footer>\n    );\n}\n","import gql from 'graphql-tag';\n\nexport const FETCH_CLUBS_QUERY = gql`\n{\ngetClubs {\n  name\n  city\n  state\n\n}\n}\n`;\n\nexport const FETCH_EVENTS_QUERY = gql`\n{\ngetEvents {\n    name\n    city_state\n    venue\n    ticket_price\n    img\n\n}\n}\n`;\n\n// export const FETCH_USER_QUERY = \n","import React, {useContext}from 'react';\nimport { FETCH_EVENTS_QUERY } from '../helper/graphql';\nimport { AuthContext } from '../context/auth';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition, Image } from 'semantic-ui-react';\nimport \"../styles/_event.scss\"\n\n\nfunction Events() {\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_EVENTS_QUERY);\n  if (data) {\n    console.log(data);\n  }\n  return (\n\t\t        <Grid.Row style={{marginTop:\"50px\"}}>\n\n          {loading ? (\n            <h1>Loading events..</h1>\n          ) : (\n              // <div className=\"eventContainer\">\n                <Transition.Group >\n                  {data.getEvents &&\n                    data.getEvents.map((event) => (\n                      <div className=\"event\">\n                        <Grid.Column id=\"eventInfo\" >\n                          <Image src={event.img} style={{ width: \"250px\", height: \"200px\", marginTop:\"10px\" }} />\n                        </Grid.Column>\n                        <Grid.Column id=\"eventInfo\" style={{marginTop:\"10px\"}}>\n                          {event.name}\n                        </Grid.Column>\n                        <Grid.Column id=\"eventInfo\">\n                          {event.venue}\n                        </Grid.Column>\n                        <Grid.Column id=\"eventInfo\">\n                          {event.city_state}\n                        </Grid.Column>\n                        <Grid.Column id=\"eventInfo\">\n                          🎟 {event.ticket_price}\n                        </Grid.Column>\n                      </div>\n                    ))}\n                </Transition.Group>\n              // </div>\n            )}\n        </Grid.Row>\n\n\t);\n}\nexport default Events;","import React, { useContext } from 'react';\nimport { Grid} from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport Sharing from \"./Sharing.jsx\";\nimport Events from './Events';\nimport \"../styles/_home.scss\"\n\n\nfunction Home() {\n  const { user } = useContext(AuthContext);\n \n  return (\n    <div className=\"homepage\">\n      <Grid columns={2}>\n        <Grid.Row className=\"page-title\">\n          <h1 id=\"title\">Ryders Rally</h1>\n        </Grid.Row>\n        <Events/>\n      </Grid>\n      <Sharing />\n    </div>\n  );\n}\n\nexport default Home;\n\n","import { useState } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};","import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport \"../styles/_login.scss\"\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../helper/hooks';\n\nfunction Login(props) {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }\n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n        <h1>Login</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username..\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password..\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Login\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Login;","import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../helper/hooks';\n\nfunction Register(props) {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(\n      _,\n      {\n        data: { register: userData }\n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n        <h1>Register</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username..\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Email\"\n          placeholder=\"Email..\"\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          error={errors.email ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password..\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Confirm Password\"\n          placeholder=\"Confirm Password..\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Register\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Register;","import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { FETCH_EVENTS_QUERY } from '../helper/graphql';\n\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../helper/hooks';\n\nconst CreateEvent = (props) =>{\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(createEvent, {\n    name: '',\n    venue: '',\n    city_state: '',\n    ticket_price: '',\n    img: ''\n  });\n\n  const [addEvent, {error}] = useMutation(CREATE_EVENT, {\n      variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_EVENTS_QUERY\n      });\n      data.getEvents = [result.data.createEvent, ...data.getEvents];\n      proxy.writeQuery({ query: FETCH_EVENTS_QUERY, data });\n      values.img = '';\n      values.name = '';\n      values.ticket_price = '';\n      values.city_state = '';\n      values.venue = '';\n      \n    }, \n   \n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n   \n  \n    }\n   );\n\n  function createEvent() {\n    addEvent();\n   \n  }\n   \n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate >\n        <h1>Create Event</h1>\n        <Form.Input\n          label=\"Name\"\n          placeholder=\"Name of event..\"\n          name=\"name\"\n          type=\"text\"\n          value={values.name}\n          error={errors.name ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Venue\"\n          placeholder=\"Venue..\"\n          name=\"venue\"\n          type=\"text\"\n          value={values.venue}\n          error={errors.venue ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"City-State\"\n          placeholder=\"City and State..\"\n          name=\"city_state\"\n          type=\"text\"\n          value={values.city_state}\n          error={errors.city_state? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Ticket Price\"\n          placeholder=\"Ticket Price..\"\n          name=\"ticket_price\"\n          type=\"text\"\n          value={values.ticket_price}\n          error={errors.ticket_price ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Img\"\n          placeholder=\"Img..\"\n          name=\"img\"\n          type=\"text\"\n          value={values.img}\n          error={errors.img ? true : false}\n          onChange={onChange}\n        />\n     \n        <Button type=\"submit\" primary>\n          Create Event\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst CREATE_EVENT = gql`\n  mutation createEvent(\n        $name: String!\n        $venue: String!\n        $city_state: String!\n        $ticket_price: String!\n        $img:String\n  ) {\n    createEvent(\n      eventInput: {\n        name: $name\n        venue: $venue\n        city_state: $city_state\n        ticket_price: $ticket_price\n        img:$img\n      }\n    ) {\n        name\n        venue\n        city_state\n        ticket_price\n        img\n    }\n  }\n`;\n\nexport default CreateEvent;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\n\nimport { useState } from \"react\";\nimport \"./App.scss\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.scss\";\n\nimport { AuthProvider } from \"./context/auth\";\nimport AuthRoute from \"./helper/auth\";\n\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Sharing from \"./components/Sharing.jsx\";\nimport CreateEvent from \"./components/CreateEvent\";\n\nfunction App() {\n\treturn (\n\t\t<AuthProvider>\n\t\t\t<Router>\n\t\t\t\t<Container>\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<AuthRoute exact path=\"/login\" component={Login} />\n\t\t\t\t\t<AuthRoute exact path=\"/register\" component={Register} />\n\t\t\t\t\t<Route exact path=\"/createEvent\" component={CreateEvent} />\n\t\t\t\t</Container>\n\t\t\t</Router>\n\t\t</AuthProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createHttpLink({\n\turi: \"http://localhost:5001/graphql\",\n});\n\nconst authLink = setContext(() => {\n\tconst token = localStorage.getItem(\"jwtToken\");\n\treturn {\n\t\theaders: {\n\t\t\tAuthorization: token ? `Bearer ${token}` : \"\",\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nexport default (\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>\n);\n","\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloProvider from './ApolloConfg';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}